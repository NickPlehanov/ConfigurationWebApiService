// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.CompilerServices;
using Microsoft.EntityFrameworkCore;

namespace ConfigurationWebApiService.Models;

public partial class Configurations
{
    public Configurations(Configurations conf, [CallerMemberName] string caller = "")
    {
        Id = Guid.NewGuid();
        Title = conf.Title;
        Description = conf.Description;
        CreateDate = conf.CreateDate == DateTime.MinValue ? DateTime.Now : conf.CreateDate;
        UpdateDate = caller.Contains("Add") ? null : DateTime.Now;
        Version = caller.Contains("Add") ? 1 : conf.Version++;
        ColourSchemaConfiguration = new HashSet<ColourSchemaConfiguration>();
        FontConfiguration = new HashSet<FontConfiguration>();
        HotKeyConfigurations = new HashSet<HotKeyConfigurations>();
        UserConfiguration = new HashSet<UserConfiguration>();
        WindowLocationConfiguration = new HashSet<WindowLocationConfiguration>();
    }
    public Configurations()
    {
        ColourSchemaConfiguration = new HashSet<ColourSchemaConfiguration>();
        FontConfiguration = new HashSet<FontConfiguration>();
        HotKeyConfigurations = new HashSet<HotKeyConfigurations>();
        UserConfiguration = new HashSet<UserConfiguration>();
        WindowLocationConfiguration = new HashSet<WindowLocationConfiguration>();
    }
    [Key]
    public Guid Id { get; set; }

    [StringLength(50)]
    public string Title { get; set; } = null!;

    public string? Description { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreateDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDate { get; set; }

    public int Version { get; set; }

    [InverseProperty("Configuration")]
    public virtual ICollection<ColourSchemaConfiguration> ColourSchemaConfiguration { get; set; } = new List<ColourSchemaConfiguration>();

    [InverseProperty("Configuration")]
    public virtual ICollection<FontConfiguration> FontConfiguration { get; set; } = new List<FontConfiguration>();

    [InverseProperty("Configuration")]
    public virtual ICollection<HotKeyConfigurations> HotKeyConfigurations { get; set; } = new List<HotKeyConfigurations>();

    [InverseProperty("Configuration")]
    public virtual ICollection<UserConfiguration> UserConfiguration { get; set; } = new List<UserConfiguration>();

    [InverseProperty("Configuration")]
    public virtual ICollection<WindowLocationConfiguration> WindowLocationConfiguration { get; set; } = new List<WindowLocationConfiguration>();
}